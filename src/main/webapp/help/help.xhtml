<ui:composition template="/templates/pageTemplate.xhtml"
				xmlns="http://www.w3.org/1999/xhtml"
				xmlns:f="http://java.sun.com/jsf/core"
				xmlns:h="http://java.sun.com/jsf/html"
				xmlns:ui="http://java.sun.com/jsf/facelets"
				xmlns:p="http://primefaces.org/ui">

	<div id="contentFrame">
		<ui:define name="contentFrame">

			<p:outputLabel value="Contents" class="boldtext"/>

			<p:outputPanel>
				<ul>
					<li>HTTP Generic Webhooks</li>
					<li>Fluentd out_http plugin</li>
					<li>ccc</li>
					<li>ddd</li>
					<li>eee</li>
				</ul>
			</p:outputPanel>

			<hr/>

			<p:outputLabel value="HTTP Generic Webhooks" class="boldtext"/>

			<p:outputPanel>
				<p>HTTP webhook accepts any GET http request that contains the following URL parameters:</p>
				<ul>
					<li>ident - identification of the process that sent the event [required]</li>
					<li>tag - custom label [optional]</li>
					<li>msg - plain text message [required]</li>
				</ul>
				<p>Example:</p>
			</p:outputPanel>

			<p:outputPanel>
				<div class="card">
					<pre style="font-size: 12px;">GET  /eventlogger/api/v1/http?tag=test&amp;ident=my-process&amp;msg=This is the text message</pre>
				</div>
			</p:outputPanel>

			<p:outputPanel>
				<p>HTTP webhook also accepts any POST http request that contains the following URL parameters and
					contains the message in the request body:</p>
				<ul>
					<li>ident - identification of the process that sent the event [required]</li>
					<li>tag - custom label [optional]</li>
				</ul>
				<p>Example:</p>
			</p:outputPanel>

			<p:outputPanel>
				<div class="card">
					<pre style="font-size: 12px;">POST  /eventlogger/api/v1/http?tag=json&amp;ident=my-process</pre>
					<pre style="font-size: 12px;">Body: {"anything":1,"or":"just plain text"}</pre>
				</div>
			</p:outputPanel>

			<hr/>

			<p:outputLabel value="Collecting syslog events with fluentd" class="boldtext"/>

			<p:outputPanel>
				<p>
					Configure Fluentd to listen for syslog events on port 10514 and forward them
					to Eventlogger using out_http plugin.
				</p>
			</p:outputPanel>

			<p:outputPanel>
				<div class="card">
					<pre style="font-size: 12px;">
&lt;source&gt;
  @type syslog
  port 10514
  bind 0.0.0.0
  &lt;transport udp&gt;
  &lt;/transport&gt;
  add_remote_addr true
  tag syslog.udp
  &lt;parse&gt;
    @type syslog
    message_format auto
  &lt;/parse&gt;
&lt;/source&gt;

&lt;filter syslog.**&gt;
  @type record_transformer
  &lt;record&gt;
    tag "\${tag}"
  &lt;/record&gt;
&lt;/filter&gt;

&lt;match syslog.**&gt;
  @type http
  endpoint http://eventlogger:8080/eventlogger/webhook/fluentd-syslog
  open_timeout 2
  &lt;format&gt;
    @type json
  &lt;/format&gt;
  &lt;buffer&gt;
    flush_interval 5s
  &lt;/buffer&gt;
&lt;/match&gt;</pre>
				</div>
			</p:outputPanel>

			<hr/>

			<p:outputLabel value="Configure syslog on the Linux server" class="boldtext"/>

			<p:outputPanel>
				<p>
					Open the /etc/rsyslogd.conf and add a line like this:
				</p>
			</p:outputPanel>

			<p:outputPanel>
				<div class="card">
					<pre style="font-size: 12px;">*.*     @192.168.0.123:10514</pre>
				</div>
			</p:outputPanel>

			<p:outputPanel>
				<p>
					Restart syslog (or rsyslog). This will tell syslog to send all messages to fluentd
					syslog plugin (or another syslog server). Use single @ for udp, and @@ for tcp.
				</p>
			</p:outputPanel>

			<hr/>

			<p:outputLabel value="Configure syslog driver on Docker container" class="boldtext"/>

			<p:outputPanel>
				<p>
					Use Docker's built-in syslog logging driver to send logs to fluentd syslog plugin.
					Select a syslog format and add a custom tag that will become an ident in fluentd.
				</p>
			</p:outputPanel>

			<p:outputPanel>
				<div class="card">
					<pre style="font-size: 12px;">services:
  httpd:
    image: httpd
    ports:
      - 8888:80
    logging:
      driver: syslog
      options:
        syslog-address: 'udp://192.168.0.123:10514'
        tag: httpd.log
        syslog-format: rfc5424</pre>
				</div>
			</p:outputPanel>

			<hr/>

			<p:outputLabel value="Configure fluentd driver on Docker container" class="boldtext"/>

			<p:outputPanel>
				<p>
					Use Docker's built-in fluentd logging driver to send logs to fluentd forward plugin.
					Set address of fluentd and add a custom tag.
				</p>
			</p:outputPanel>

			<p:outputPanel>
				<div class="card">
					<pre style="font-size: 12px;">services:
  httpd:
    image: httpd
    ports:
      - 8888:80
    logging:
      driver: fluentd
      options:
        fluentd-address: 192.168.0.123:24224
        tag: httpd.access</pre>
				</div>
			</p:outputPanel>

			<p:outputPanel>
				<p>
					Event must be sent to eventlogger's
					http endpoint. It is highly recommended to set the ident in URL parameters.
					Example how to configure forward plugin.
				</p>
			</p:outputPanel>

			<p:outputPanel>
				<div class="card">
					<pre style="font-size: 12px;">&lt;source&gt;
  @type forward
  port 24224
  bind 0.0.0.0
&lt;/source&gt;

&lt;match httpd.access&gt;
    @type http
      endpoint http://192.168.0.16:8080/eventlogger/api/v1/http?ident=httpd.access
      open_timeout 2
      &lt;format&gt;
        @type json
      &lt;/format&gt;
      &lt;buffer&gt;
        flush_interval 10s
      &lt;/buffer&gt;
 &lt;/match&gt;</pre>
				</div>
			</p:outputPanel>

			<hr/>

			<p:outputLabel value="File tailing with fluentd" class="boldtext"/>

			<p:outputPanel>
				<p>
					ss
				</p>
			</p:outputPanel>

		</ui:define>
	</div>

</ui:composition>

