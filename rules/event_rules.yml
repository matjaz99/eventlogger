version: 1

groups:
  - name: syslog events
    endpoint: /eventlogger/event/fluentd-syslog
    rules:
      - name: Counting errors
        pattern:
          expr: "(?i)error"
          type: regex
        action:
          type: count
          metricName: event_error_count
      - name: Count user SSH logins
        pattern:
          expr: "session opened for user"
          type: regex
        filter:
          host: elasticvm
          ident: sshd
        action:
          type: event
      - name: Count command not found
        pattern:
          expr: "command not found"
          type: regex
        action:
          type: count
          metricName: event_command_not_found_total
      - name: Started Session
        pattern:
          expr: "Started Session \\d+ of user"
          type: regex
        filter:
          ident: systemd
        action:
          type: count
          metricName: event_session_started_total
      - name: Connection closed by remote host
        pattern:
          expr: "Connection closed by remote host"
          type: regex
        filter:
          ident: sshd
        action:
          type: count
          metricName: event_connection_closed_total
      - name: NTP Can't synchronise
        pattern:
          expr: "Can't synchronise"
          type: regex
        filter:
          ident: chronyd
        action:
          type: alarm
          severity: minor
      - name: NTP Can't synchronise
        pattern:
          expr: "Selected source"
          type: regex
        filter:
          ident: chronyd
        action:
          type: clear
      - name: NTP System clock wrong
        pattern:
          expr: "System clock wrong"
          type: regex
        filter:
          ident: chronyd
        action:
          type: alarm
      - name: DNF Metadata cache refreshed recently
        pattern:
          expr: "Metadata cache refreshed recently"
          type: regex
        filter:
          ident: dnf
        action:
          type: count
          metricName: event_dnf_metadata_cache_refreshed

  - name: docker events in syslog
    endpoint: /eventlogger/event/fluentd-syslog
    rules:
      - name: The swarm does not have a leader
        pattern:
          expr: "%{GREEDYDATA}error%{GREEDYDATA}The swarm does not have a leader%{GREEDYDATA}"
          type: grok
        filter:
          ident: "dockerd"
        action:
          type: count
          metricName: event_swarm_no_leader_total
      - name: The swarm does not have a leader alarm
        pattern:
          expr: "%{GREEDYDATA}error%{GREEDYDATA}The swarm does not have a leader%{GREEDYDATA}"
          type: grok
        filter:
          ident: "dockerd"
        action:
          type: alarm
          severity: critical

  - name: log files (tail)
    endpoint: /eventlogger/event/fluentd-tail
    rules:
      - name: Error counter on fluentd-tail endpoint
        pattern:
          expr: "%{GREEDYDATA}(error|Error|ERROR|Exception)%{GREEDYDATA}"
          type: grok
        action:
          type: count
          metricName: event_fluentd_tail_endpoint_errors_total
      - name: alertmonitor failed to synchronize alarms counter
        pattern:
          expr: "%{GREEDYDATA}SYNCTASK%{GREEDYDATA}failed to synchronize alarms%{GREEDYDATA}"
          type: grok
        filter:
          ident: alertmonitor
        action:
          type: count
          metricName: event_alertmonitor_failed_sync_total

  - name: http endpoint events
    endpoint: /eventlogger/event/http
    rules:
      - name: Error counter
        pattern:
          expr: "%{GREEDYDATA}(error|Error|ERROR|Exception)%{GREEDYDATA}"
          type: grok
        action:
          type: count
          metricName: event_http_endpoint_errors_total

  - name: Test alarm events
    endpoint: /eventlogger/event/http
    rules:
      - name: Alarm test
        pattern:
          expr: "does not work"
          type: regex
        filter:
          ident: my-process
        action:
          type: alarm
          severity: major
      - name: Alarm test
        pattern:
          expr: "is working now"
          type: regex
        filter:
          ident: my-process
        action:
          type: clear


# actions:
# alarm - send alarm and keep state until cleared
# clear - clear alarm
# event - just send without expecting a clear event
# count - count occurrences and expose as Prometheus metric (counter)
# extract - extract value and expose the value as Prometheus metric (gauge) - TODO?
# log - write event to separate log - TODO?
# tag - add custom tags - TODO?
# ignore - ignore event - TODO?
# kafka - send to kafka topic - TODO?

